name: Pull Request

on:
  pull_request:
    types: [ synchronize, opened, reopened, ready_for_review ]
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
      - 'tests/performance/**'
      - 'OWNERS'
      - 'CODEOWNERS'
      - 'sec-scanners-config.yaml'
    branches:
      - main
permissions:
  contents: read

jobs:
  verify-actions:
    name: Ensure SHA pinned actions
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v3
      - uses: zgosalvez/github-actions-ensure-sha-pinned-actions@555a30da2656b4a7cf47b107800bef097723363e # 2.1.3
        with:
          allowlist: |
            actions/checkout
            actions/setup-go
            actions/upload-artifact

  lint:
    needs: [verify-actions]
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache: false # We need to disable caching here, since this is handled by the golangci-lint action
      - name: golangci-lint
        uses: golangci/golangci-lint-action@639cd343e1d3b897ff35927a75193d57cfcba299 #v3.6.0
        with:
          version: 'latest'
          args: --timeout=10m --verbose

  run-unit-tests:
    needs: [verify-actions]
    name: Run unit tests
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: Run tests
        run: make test

  k8s-compatibility-test:
    needs: [verify-actions]
    name: Kubernetes version compatibility check
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - uses: AbsaOSS/k3d-action@4e8b3239042be1dc0aed6c5eb80c13b18200fc79 #v2.4.0
        name: "Create Single Cluster"
        with:
          cluster-name: "test-cluster-1"
          args: >-
           --agents 1
           --image docker.io/rancher/k3s:v1.27.3-k3s1
      - name: Wait for image build to succeed
        uses: "WyriHaximus/github-action-wait-for-status@a0d59308face45c8229ad5aef809d6df5a0c7620"
        with:
          ref: ${{ github.ref }}
          ignoreActions: "Kubernetes version compatibility check"
          checkInterval: 20
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: Run integration tests
        run: |
          kubectl config use-context k3d-test-cluster-1
          EXPORT_RESULT=true IMG=europe-docker.pkg.dev/kyma-project/dev/istio-manager:PR-${{github.event.number}} make istio-integration-test
      - name: Check deprecations
        run: |
          set -eou pipefail
          GO111MODULE=on go install github.com/prometheus/prom2json/cmd/prom2json@v1.3.3
          kubectl get --context k3d-test-cluster-1 --raw /metrics | prom2json | jq '.[] | select(.name=="apiserver_requested_deprecated_apis").metrics[].labels' > deprecations.txt
      - uses: actions/upload-artifact@v3
        with:
          name: html-reports
          path: tests/integration/reports/
      - uses: actions/upload-artifact@v3
        with:
          name: deprecation-report
          path: deprecations.txt
