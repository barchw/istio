# Jobs defined in this file are responsible for things that do not require container image
# but still relevant to the codebase such as unit tests, linting etc

name: Pull Request

on:
  pull_request:
    types: [ synchronize, opened, reopened, ready_for_review ]
    branches:
      - main
      - 'release-**'
permissions:
  contents: read

jobs:
  filter-changes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: tj-actions/changed-files@90a06d6ba9543371ab4df8eeca0be07ca6054959
        id: changed-files
        with:
          files_ignore_yaml: |
            docs:
              - 'docs/**'
              - '**/*.md'
            performance_tests:
              - 'tests/performance/**'
            owner_files:
              - 'OWNERS'
              - 'CODEOWNERS'
            sec_scanners:
              - 'sec-scanners-config.yaml'
            dependabot:
              - './github/dependabot.yml'
            hidden_files:
              - ".**"
      - name: List all changed files
        run: echo '${{ steps.changed-files.outputs.all_changed_files }}'
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [filter-changes]
    if: ${{ github.event.pull_request.draft == false && needs.changed-files.outputs.any_modified }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: false # We need to disable caching here, since this is handled by the golangci-lint action
      - name: golangci-lint
        uses: golangci/golangci-lint-action@3cfe3a4abbb849e10058ce4af15d205b6da42804 #v4.0.0
        with:
          version: 'latest'
          args: --timeout=10m --verbose

  run-unit-tests:
    name: Run unit tests
    needs: [filter-changes]
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.draft == false && needs.changed-files.outputs.any_modified }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - name: Run tests
        run: |
          PULL_PULL_SHA=${{ github.event.pull_request.head.sha}} \
          PULL_BASE_SHA=${{ github.event.pull_request.base.sha}} \
          PULL_NUMBER=${{ github.event.number }} \
          ./tests/integration/scripts/code-coverage-guard.sh

  run-unit-tests-experimental:
    name: Run unit tests with experimental build tag
    needs: [filter-changes]
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.draft == false && needs.changed-files.outputs.any_modified }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - name: Run tests
        run: make test-experimental-tag
